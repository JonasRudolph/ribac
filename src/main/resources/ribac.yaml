openapi: 3.0.2

info:
  title: ribac - RightBasedAccessControl
  version: 0.1.0-SNAPSHOT

servers:
- url: http://localhost:8080

paths:
  /users:
    post:
      operationId: userCreate
      summary: Creates a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  minLength: 1
                  maxLength: 255
              required:
              - id
            example:
              id: user123
      responses:
        201:
          description: Successfully created the new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  createdUser:
                    $ref: '#/components/schemas/User'
                required:
                - createdUser
              example:
                createdUser:
                  id: user123
        400:
          description: The request body could not be validated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  message: "$.id: must be at least 1 characters long"
        409:
          description: A user already exists with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  message: "A user already exists with the id 'user123'"



  /users/{userId}:
    get:
      operationId: userFetch
      summary: Returns the requested user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 255
      responses:
        200:
          description: Successfully returned the requested user
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestedUser:
                    $ref: '#/components/schemas/User'
                required:
                - requestedUser

components:
  schemas:
    User:
      type: object
      required:
      - id
      properties:
        id:
          type: string

    Error:
      type: object
      required:
      - error
      properties:
        error:
          type: object
          required:
          - message
          properties:
            message:
              type: string